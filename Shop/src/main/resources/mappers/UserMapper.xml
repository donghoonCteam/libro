<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pj.spring.mapper.userMapper">
	<!-- 회원가입 -->
	<insert id="userInsert" parameterType="userVO">
		INSERT INTO user(
			user_id 
			, user_password
			, user_name
			, user_phone
			, user_email
			, user_create_id
			, user_update_id
		)VALUES(
			#{user_id}
			, #{user_password}
			, #{user_name}
			, #{user_phone}
			, #{user_email}
			, #{user_id}
			, #{user_id}
		)
	</insert>
	
	<!-- 로그인 -->
	<select id="selectOneById" parameterType="String" resultType="userVO">
		SELECT user_id 
			, user_password
			, user_type
			, user_status
		 FROM user
		WHERE user_id = #{user_id}
		AND user_status = 'E'
	</select>
	
	<!-- 아이디 중복 체크 -->
	<select id="selectCntByUid" parameterType="String" resultType="int">
		SELECT COUNT(*) AS cnt 
			FROM user 
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 주소록 조회 -->
	<select id="addrlistSelect" parameterType="String" resultType="addressbookVO" >
		SELECT address_book_no
			, address_book_addressname
			, address_book_name
			, address_book_postcode
			, address_book_address
			, address_book_detailaddress
			, address_book_phone
		 FROM address_book
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 주소록 등록 -->
	<insert id="addrInsert" parameterType="addressbookVO">
		INSERT INTO address_book(
			address_book_addressname 
			, address_book_name
			, address_book_postcode
			, address_book_address
			, address_book_detailaddress
			, address_book_phone
			, address_book_create_id
			, address_book_update_id
			, user_id
		)VALUES(
			#{address_book_addressname}
			, #{address_book_name}
			, #{address_book_postcode}
			, #{address_book_address}
			, #{address_book_detailaddress}
			, #{address_book_phone}
			, #{user_id}
			, #{user_id}
			, #{user_id}
		);
	</insert>
	
	<!-- 주소록 삭제 -->
	<delete id="addrDelete" parameterType="String">
		DELETE FROM address_book WHERE address_book_no =  #{address_book_no}
	</delete>
	
	<!-- 주소록 수정 -->
	<select id="addrModify" parameterType="String" resultType="addressbookVO" >
		SELECT address_book_no
			, address_book_addressname
			, address_book_name
			, address_book_postcode
			, address_book_address
			, address_book_detailaddress
			, address_book_phone
		 FROM address_book
		WHERE address_book_no =  #{address_book_no}
	</select>
	
	<!-- 주소록 업데이트 -->
	<update id="addrModifyOk" parameterType="addressbookVO">
		UPDATE address_book 
			SET 
		address_book_addressname   = #{address_book_addressname}
		, address_book_name          = #{address_book_name} 
		, address_book_postcode      = #{address_book_postcode} 
		, address_book_address       = #{address_book_address} 
		, address_book_detailaddress = #{address_book_detailaddress} 
		, address_book_phone         = #{address_book_phone} 
		WHERE address_book_no =  #{address_book_no}
	</update>
	
	<!-- 회원정보 조회 -->
 	<select id="memberinfoSelect" parameterType="String" resultType="userVO" >
		SELECT user_id 
			, user_name
			, user_phone
		 FROM user 
		WHERE user_id = #{user_id}
		AND user_status = 'E'
	</select> 
	
	<!-- 회원정보 업데이트 -->
	<update id="memberinfoModify" parameterType="userVO">
		UPDATE user
			SET 
		user_password   = #{user_password}
		, user_phone          = #{user_phone} 
		WHERE user_id = #{user_id}
		 AND user_status = 'E'
	</update>
	
	
</mapper>



