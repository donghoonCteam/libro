<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pj.spring.mapper.adminMapper">
	
	<!-- 대시보드 주문 관리  건 수 -->
	<select id="orderCount" resultType="java.util.Map" >
		SELECT (select count(*) from ordered where ordered_status = 'D' and ordered_date = CURRENT_DATE) AS d_cnt
      		  ,(select count(*) from ordered where ordered_status = 'O' and ordered_date = CURRENT_DATE) AS o_cnt
      		  ,(select count(*) from payment where payment_type = 'PC' and payment_date = CURRENT_DATE) AS pc_cnt
	</select>
	
	<!-- 대시보드 취소 관리  건 수  -->
	<select id="cancelCount" resultType="java.util.Map" >
		SELECT (select count(*) from ordered where ordered_status = 'CW' and ordered_date = CURRENT_DATE) AS cw_cnt
      		  ,(select count(*) from ordered where ordered_status = 'CC' and ordered_date = CURRENT_DATE) AS cc_cnt
      		  ,(select count(*) from payment where payment_type = 'RW' and payment_date = CURRENT_DATE) AS rw_cnt
      		  ,(select count(*) from payment where payment_type = 'RC' and payment_date = CURRENT_DATE) AS rc_cnt
	</select>
	
	 <!-- 대시보드 리뷰/문의 관리  건 수  -->
	<select id="contentCount" resultType="java.util.Map" >
		SELECT (select count(review_no) from review where review_create_at = CURRENT_DATE) AS review_cnt
      		  ,(select count(*) from contact where contact_type = '주문문의' and contact_create_at = CURRENT_DATE) AS contactO_cnt
      		  ,(select count(*) from contact where contact_type = '상품문의' and contact_create_at = CURRENT_DATE) AS contactP_cnt
      		  ,(select count(*) from contact where contact_type = '기타문의' and contact_create_at = CURRENT_DATE) AS contactM_cnt
	</select>
	 
	<!-- 회원 관리 list -->
	<select id="userList" parameterType="java.util.Map" resultType="userVO" >
		SELECT *
		  FROM user 
		 WHERE user_type = 'U'
		 LIMIT #{start} , #{perPage}
	</select>
	
	<!-- 회원 전체 수 -->
	<select id="selectTotal" resultType="int">
		SELECT count(*)
		  FROM user
	</select>
	
	
	<!-- 상품 등록 -->
	<insert id="insertProduct" parameterType="ProductVO">
		INSERT INTO product(
			 product_status
			,category_no
			,product_publisher
			,product_price
			,product_stock
			,product_name
			,product_isbn
			,product_page
			,product_description
			,product_author
			,product_author_description
			,product_create_id
		)VALUES(
			 #{product_status}
			,(SELECT category_no FROM category WHERE category_name = #{category_name})
			,#{product_publisher}
			,#{product_price}
			,#{product_stock}
			,#{product_name}
			,#{product_isbn}
			,#{product_page}
			,#{product_description}
			,#{product_author}
			,#{product_author_description}
			,#{user_id}
		)
		<selectKey order="AFTER" resultType="String" keyProperty="product_no">
			SELECT MAX(product_no) AS product_no FROM product
		</selectKey>
	</insert>
	
	<!-- 첨부파일 -->
	<insert id="insertAttachment" parameterType="ProductVO">
	    INSERT INTO attachment (
	        attachment_type, 
	        attachment_product_no <!-- 상품 번호 -->
	    ) 
	    VALUES (
	        #{attachment_type}, 
	        #{product_no}
	    )
	    <selectKey order="AFTER" resultType="String" keyProperty="attachment_no">
			SELECT MAX(attachment_no) AS attachment_no FROM attachment
		</selectKey>
	</insert>
	
	<!-- 첨부파일 상세 -->
	 <insert id="insertAttachmentDetail" parameterType="ProductVO">
        INSERT INTO attachment_detail (
            attachment_detail_name,
            attachment_detail_new_name,
            attachment_detail_path,
            attachment_detail_size,
            attachment_detail_create_id,
            attachment_no
        )
        VALUES (
            #{attachment_detail_name},
            #{attachment_detail_new_name},
            #{attachment_detail_path},
            #{attachment_detail_size},
            #{attachment_detail_create_id},
            #{attachment_no}  <!-- attachment 테이블에서 생성된 attachment_no -->
        )
    </insert>
    
    <!-- 상품 관리 list -->
    <select id="productList" parameterType="java.util.Map" resultType="ProductVO">
		  SELECT    p.*
		          , c.category_name
		          , ad.attachment_detail_new_name
		    FROM  product p
		    JOIN  category c ON p.category_no = c.category_no
	   LEFT JOIN  attachment a ON p.product_no = a.attachment_product_no AND a.attachment_type = 'PT'
	   LEFT JOIN  attachment_detail ad ON a.attachment_no = ad.attachment_no
		   LIMIT  #{start}, #{perPage}
	</select>
		
	<!-- 상품 전체 수 -->
	<select id="productTotal" resultType="int">
		SELECT count(*)
		  FROM product
	</select>
	
	<!-- 상품 수정 상세 -->
	<select id="productModify" parameterType="int" resultType="ProductVO" >
		SELECT p.*, c.category_name
		  FROM product p
		  JOIN category c 
		    ON p.category_no = c.category_no
		 WHERE product_no = #{product_no}
	</select>
	
	<!-- 상품 수정 -->
	<update id="productModifyUpdate" parameterType="ProductVO">
		UPDATE product
		   SET product_status = #{product_status}
			  ,category_no = (SELECT category_no FROM category WHERE category_name = #{category_name})
			  ,product_publisher = #{product_publisher}
			  ,product_price = #{product_price}
			  ,product_stock = #{product_stock}
			  ,product_name = #{product_name}
			  ,product_isbn = #{product_isbn}
			  ,product_page = #{product_page}
			  ,product_description = #{product_description}
			  ,product_author = #{product_author}
			  ,product_author_description = #{product_author_description}
			  ,product_update_id = #{product_update_id}
			  ,product_update_at = now()
	    WHERE  product_no = #{product_no}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="productDelete" parameterType="int">
		DELETE FROM product
			  WHERE product_no = #{product_no}
	</delete>
	 
	<!-- 주문 관리List -->
	<select id="orderList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT   od.ordered_detail_no
		       , o.ordered_no
		       , p.product_no
		       , p.product_name
		       , o.ordered_create_at
		       , pm.payment_type
		       , o.ordered_status
		       , p.product_price
		       , od.ordered_detail_quantity
		       , o.ordered_name
		FROM  ordered o
		JOIN  ordered_detail od ON o.ordered_no = od.ordered_no
   LEFT JOIN  product p ON p.product_no = od.product_no
   LEFT JOIN  payment pm ON pm.payment_no = o.payment_no
       LIMIT  #{start}, #{perPage}
	</select>
	
	<!-- 주문 전체 수 -->
	<select id="orderTotal" resultType="int">
		SELECT count(*)
		  FROM ordered
	</select>
	
	<!-- 주문 관리 상태 변경 ajax -->
	<update id="updateOrderStatus" parameterType="java.util.Map">
		UPDATE ordered_detail
	       SET ordered_status = #{ordered_status}
	     WHERE ordered_detail_no = #{ordered_detail_no}
	</update>
	 
</mapper>